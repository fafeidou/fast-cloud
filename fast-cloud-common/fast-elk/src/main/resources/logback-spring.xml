<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<!-- springProfile用于指定当前激活的环境，如果spring.profile.active的值是哪个，就会激活对应节点下的配置 -->
	<springProfile name="dev">
		<!-- configuration to be enabled when the "staging" profile is active -->
		<springProperty scope="context" name="module" source="spring.application.name"
						defaultValue="undefinded"/>
		<!-- 该节点会读取Environment中配置的值，在这里我们读取application.yml中的值 -->
		<springProperty scope="context" name="bootstrapServers" source="spring.kafka.bootstrap-servers"
						defaultValue="106.14.227.31:9092"/>
		<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
			<!-- encoders are assigned the type
                 ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
			<encoder>
				<pattern>%boldYellow(${module}) | %d | %highlight(%-5level)| %cyan(%logger{15}) - %msg %n</pattern>
			</encoder>
		</appender>
		<!-- kafka的appender配置 -->
		<appender name="kafka" class="com.github.danielwegener.logback.kafka.KafkaAppender">
			<encoder>
				<pattern>${module} | %d | %-5level| %logger{15} - %msg</pattern>
			</encoder>
			<topic>abklog_topic</topic>
			<keyingStrategy class="com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy"/>
			<deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy"/>

			<!-- Optional parameter to use a fixed partition -->
			<!-- <partition>0</partition> -->

			<!-- Optional parameter to include log timestamps into the kafka message -->
			<!-- <appendTimestamp>true</appendTimestamp> -->

			<!-- each <producerConfig> translates to regular kafka-client config (format: key=value) -->
			<!-- producer configs are documented here: https://kafka.apache.org/documentation.html#newproducerconfigs -->
			<!-- bootstrap.servers is the only mandatory producerConfig -->
			<producerConfig>bootstrap.servers=${bootstrapServers}</producerConfig>

			<!-- 如果kafka不可用则输出到控制台 -->
			<appender-ref ref="STDOUT"/>

		</appender>
		<!-- 指定项目中的logger -->
		<!--<logger name="org.springframework.test" level="INFO" >
			<appender-ref ref="kafka" />
		</logger>-->
		<logger name="com.fast.cloud.fastelk.controller" level="INFO" >
			<appender-ref ref="kafka" />
		</logger>
		<root level="info">
			<appender-ref ref="STDOUT" />
		</root>
	</springProfile>
</configuration>